version: "3.8"

services:
  database:
    image: library/postgres:13-alpine
    container_name: docker-django-database
    restart: always
    env_file:
      - env/database.env
    expose:
      - 5432
    volumes:
      - ./database/scripts:/docker-entrypoint-initdb.d
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]  # TODO: find a way to dynamically get the username
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    image: docker-django-app
    command:
      - /bin/sh
      - -c
      - |
        poetry run python manage.py compilemessages
        poetry run python manage.py migrate
        poetry run python manage.py createcachetable
        poetry run python manage.py collectstatic --noinput
        bash runserver.sh
    volumes:
      - .:/code
    expose:
      - 8000
    env_file:
      - env/app.env
      - env/database.env
    depends_on:
      database:
        condition: service_healthy
    links:
      - database

  nginx:
    image: library/nginx:latest
    container_name: docker-django-nginx
    ports:
      - 8081:8081
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./static:/static
      - ./media:/media
    depends_on:
      - web

  cron:
    build:
      context: .
      dockerfile: docker/cron.dockerfile
    container_name: docker-django-cron
    command: crond -f -d 8
    volumes:
      - "./cron/cron:/etc/crontabs/root:z"
    restart: unless-stopped
    depends_on:
      - nginx
    links:
      - nginx
